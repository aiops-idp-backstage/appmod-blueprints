apiVersion: core.oam.dev/v1beta1
kind: ComponentDefinition
metadata:
  annotations:
    definition.oam.dev/alias: ""
    definition.oam.dev/description: Appmod deployment with canary support
  name: appmod-service
spec:
  schematic:
    cue:
      template: |2
        let previewService = "\(context.name)-preview"

        output: {
        	apiVersion: "argoproj.io/v1alpha1"
        	kind:       "Rollout"
        	metadata: name: context.name
        	spec: {
        		replicas:             parameter.replicas
        		revisionHistoryLimit: 2
        		selector: matchLabels: app: context.name
        		strategy: canary:
        		{
        			canaryService: previewService
        			steps: [
        				{
        					setWeight: 20
        				},
        				if parameter.functionalGate != _|_ {
        					{
        						pause: duration: parameter.functionalGate.pause
        					}
        				},
        				if parameter.functionalGate != _|_ {
        					{
        						analysis: {
        							templates: [
        								{
        									templateName: "functional-gate-\(context.name)"
        								},
        							]
        							args: [
        								{
        									name:  "service-name"
        									value: previewService
        								},
        							]
        						}
        					}
        				},
        				{
        					setWeight: 40
        				},
        				{
        					pause: duration: "15s"
        				},
        				{
        					setWeight: 60
        				},
        				{
        					pause: duration: "15s"
        				},
        				{
        					setWeight: 80
        				},
        				if parameter.performanceGate != _|_ {
        					{
        						pause: duration: parameter.performanceGate.pause
        					}
        				},
        				if parameter.performanceGate != _|_ {
        					{
        						analysis: {
        							templates: [
        								{
        									templateName: "performance-gate-\(context.name)"
        								},
        							]
        							args: [
        								{
        									name:  "service-name"
        									value: previewService
        								},
        							]
        						}
        					}
        				},
        			]
        		}
        		template: {
        			metadata: labels: app: context.name
        			spec: containers: [{
        				image:           parameter.image
        				imagePullPolicy: "Always"
        				name:            parameter.image_name
        				ports: [{
        					containerPort: parameter.targetPort
        				}]
        			}]
        		}
        	}
        }
        outputs: {
        	"appmod-service-service": {
        		apiVersion: "v1"
        		kind:       "Service"
        		metadata: name: context.name
        		spec: {
        			selector: app: context.name
        			ports: [{
        				port:       parameter.port
        				targetPort: parameter.targetPort
        			}]
        		}
        	}
        	"appmod-service-preview": {
        		apiVersion: "v1"
        		kind:       "Service"
        		metadata: name: previewService
        		spec: {
        			selector: app: context.name
        			ports: [{
        				port:       parameter.port
        				targetPort: parameter.targetPort
        			}]
        		}
        	}
        	if parameter.functionalGate != _|_ {
        		"appmod-functional-analysis-template": {
        			kind:       "AnalysisTemplate"
        			apiVersion: "argoproj.io/v1alpha1"
        			metadata: name: "functional-gate-\(context.name)"
        			spec: metrics: [
        				{
        					name: "\(context.name)-metrics"
        					provider: job: spec: {
        						template: spec: {
        							containers: [
        								{
        									name:  "test"
        									image: parameter.functionalGate.image
        									args: [
        										"\(previewService):\(parameter.port)",
        										"\(parameter.functionalGate.extraArgs)",

        									]
        								},
        							]
        							restartPolicy: "Never"
        						}
        						backoffLimit: 0
        					}
        				},
        			]
        		}
        	}
        	if parameter.performanceGate != _|_ {
        		"appmod-performance-analysis-template": {
        			kind:       "AnalysisTemplate"
        			apiVersion: "argoproj.io/v1alpha1"
        			metadata: name: "performance-gate-\(context.name)"
        			spec: metrics: [
        				{
        					name: "\(context.name)-metrics"
        					provider: job: spec: {
        						template: spec: {
        							containers: [
        								{
        									name:  "test"
        									image: parameter.performanceGate.image
        									args: [
        										"\(previewService):\(parameter.port)",
        										"\(parameter.performanceGate.extraArgs)",

        									]
        								},
        							]
        							restartPolicy: "Never"
        						}
        						backoffLimit: 0
        					}
        				},
        			]
        		}
        	}
        }

        #QualityGate: {
        	image:     string
        	pause:     string
        	extraArgs: *"" | string
        }

        parameter: {
        	image_name:       string
        	image:            string
        	replicas:         *3 | int
        	port:             *80 | int
        	targetPort:       *8080 | int
        	functionalGate?:  #QualityGate
        	performanceGate?: #QualityGate
        }
  workload:
    definition:
      apiVersion: apps/v1
      kind: Deployment

