---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-mysql-endpoint # How to do programatically
  namespace: grafana-operator
data:
  MYSQL_ENDPOINT: ${MYSQL_ENDPOINT}
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-mysql-creds # USE EXTERNAL-SECRETS
  namespace: grafana-operator
type: Opaque
stringData:
  GRAFANA_MYSQL_PASSWORD: "grafana_password"
---
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDatasource
metadata:
  name: mysql-datasource
  namespace: grafana-operator
spec:
  valuesFrom:
    - targetPath: "secureJsonData.password"
      valueFrom:
        secretKeyRef:
          name: "grafana-mysql-creds"
          key: GRAFANA_MYSQL_PASSWORD
    - targetPath: "url"
      valueFrom:
        configMapKeyRef:
          name: "grafana-mysql-endpoint"
          key: MYSQL_ENDPOINT
  instanceSelector:
    matchLabels:
      dashboards: "external-grafana" 
  datasource:
    name: mysql
    type: mysql
    url: ${MYSQL_ENDPOINT}
    access: proxy
    user: grafanaReader
    secureJsonData:
      password: ${GRAFANA_MYSQL_PASSWORD}
    jsonData:
      database: lake 
      maxOpenConns: 100
      maxIdleConns: 100
      connMaxLifetime: 14400
      timeInterval: "1m"
      tlsSkipVerify: true
