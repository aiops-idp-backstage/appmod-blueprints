apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: incidents-workflow-template
  namespace: ${{values.namespace}}
spec:
  arguments:
    parameters:
      - name: body
      - name: headers
      - name: url
  templates:
    - name: process-incident
      inputs:
        parameters:
          - name: body
          - name: headers
          - name: url
      script:
        image: alpine
        command: [sh]
        envFrom:
          - secretRef:
              name: devlake-webhook-secret
          - configMapRef:
              name: devlake-webhook-id
        source: |
          apk add --no-cache jq curl
          webhook_url="{{inputs.parameters.url}}"/api/rest/plugins/webhook/connections/${DEVLAKE_HOOK_ID}/issues

          echo '{{inputs.parameters.body}}'
          PAYLOAD=$(echo '{{inputs.parameters.body}}' | jq '
          {
            issueKey: (.repository.full_name + "-" + (.issue.number | tostring)),
            title: .issue.title,
            description: .issue.body,
            url: .issue.html_url,
            type: "INCIDENT",
            status: (if .issue.state == "open" then "TODO" else "DONE" end),
            originalStatus: "TODO",
            createdDate: .issue.created_at,
            updatedDate: .issue.updated_at,
            resolutionDate: (if .issue.state == "closed" then .issue.closed_at else null end),
            priority: "",
            severity: "",
            creatorId: .issue.user.login,
            creatorName: (.issue.user.full_name // .issue.user.login),
            assigneeId: (.issue.assignee.login // ""),
            assigneeName: (if .issue.assignee then (.issue.assignee.full_name // .issue.assignee.login) else "" end)
          }')
          echo "====Transformed Payload===="
          echo "$PAYLOAD" | jq '.'

          curl -X POST -H "Authorization: Bearer $DEVLAKE_TOKEN" -H "Content-Type: application/json" -d "$PAYLOAD" $webhook_url
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: pull-requests-workflow-template
  namespace: ${{values.namespace}}
spec:
  arguments:
    parameters:
      - name: body
      - name: headers
      - name: url
  templates:
    - name: process-pull-request
      inputs:
        parameters:
          - name: body
          - name: headers
          - name: url
      script:
        image: alpine
        command: [sh]
        envFrom:
          - secretRef:
              name: devlake-webhook-secret
          - configMapRef:
              name: devlake-webhook-id
        source: |
          apk add --no-cache jq curl
          webhook_url="{{inputs.parameters.url}}"/api/rest/plugins/webhook/connections/${DEVLAKE_HOOK_ID}/pull_requests

          echo '{{inputs.parameters.body}}'
          PAYLOAD=$(echo '{{inputs.parameters.body}}' | jq '
          {
            id: ("PR-"+(.pull_request.id | tostring)),
            pullRequestKey: (.pull_request.id | tostring),
            displayTitle: .pull_request.title,
            description: .pull_request.body,
            status: (if .pull_request.state == "open" then "OPEN" elif .pull_request.merged then "MERGED" else "CLOSED" end),
            createdDate: .pull_request.created_at,
            updatedDate: .pull_request.updated_at,
            closedDate: .pull_request.closed_at,
            mergedDate: .pull_request.merged_at,
            type: "PR",
            url: .pull_request.html_url,
            authorId: .pull_request.user.login,
            authorName: (.pull_request.user.name // .pull_request.user.login),
            reviewers: (.pull_request.requested_reviewers // [] | map(.login)),
            comments: (.pull_request.comments // 0),
            commits: (.pull_request.commits // 0),
            additions: (.pull_request.additions // 0),
            deletions: (.pull_request.deletions // 0),
            changedFiles: (.pull_request.changed_files // 0),
            baseBranch: .pull_request.base.ref,
            headBranch: .pull_request.head.ref,
            repoId: .repository.id,
            repoName: .repository.full_name
          }')
          echo "====Transformed Payload===="
          echo "$PAYLOAD" | jq '.'

          curl -X POST -H "Authorization: Bearer $DEVLAKE_TOKEN" -H "Content-Type: application/json" -d "$PAYLOAD" $webhook_url

