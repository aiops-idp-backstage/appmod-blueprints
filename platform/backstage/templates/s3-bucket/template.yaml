apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: s3-bucket-template
  title: S3 Bucket Template
  description: Create S3 bucket using OAM and CrossPlane
spec:
  owner: guest
  type: service
  parameters:
    - title: Provide S3 Bucket Information
      required:
        - bucket_name
        - environment
        - region
        - repoUrl
      properties:
        bucket_name:
          title: Bucket Name
          type: string
          description: Name of the S3 bucket
        environment:
          title: Environment
          type: string
          description: The environment (e.g., dev, prod)
          enum: ['dev', 'prod']
        provider:
          title: Provider
          type: string
          description: Provider Configuration
          default: default
        region:
          title: Region
          type: string
          description: AWS region for the S3 bucket
          default: us-west-2
        namespace:
          default: default
          title: Existing namespace to create this resource
          type: string
        configuration:
          default: standard
          title: Configuration of your S3 Bucket
          type: string
          enum: ['standard', 'intelligent-tiering']
        repoUrl:
          title: Gitea URL
          description: Gitea URL on Management Cluster
          type: string
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          provider: ${{ parameters.provider }}
          bucket_name: ${{ parameters.bucket_name }}
          environment: ${{ parameters.environment }}
          region: ${{ parameters.region }}
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.bucket_name }}
        repoUrl: 'github.com?owner=platform-team&repo=${{ parameters.bucket_name }}'
        repoVisibility: private
    - id: publish
      name: Publishing to a gitea git repository
      action: publish:gitea
      input:
        description: This is an example app
        repoUrl: ${{parameters.repoUrl}}?repo=${{parameters.name}}
        defaultBranch: main
    - id: create-argocd-app
      name: Create ArgoCD App
      action: cnoe:create-argocd-app
      input:
        appName: ${{parameters.name}}
        appNamespace: default
        argoInstance: in-cluster
        projectName: default
        repoUrl: http://my-gitea-http.gitea.svc.cluster.local:3000/giteaAdmin/${{parameters.name}}
        path: "manifests"
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'
    - id: template-output
      name: Template Output
      action: debug:log
      input:
        listWorkspace: true

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
